// Generated by CoffeeScript 2.7.0
var add_stacks, clear_stacks, copy, delete_stacks, init_cards, num_to_str, output, stacks_to_str;

window.stacks = [];

$().ready(function() {
  $('#delete').on('click', function() {
    return delete_stacks();
  });
  $('#clear').on('click', function() {
    return clear_stacks();
  });
  $('#copy').on('click', function() {
    return copy();
  });
  return init_cards();
});

add_stacks = function(num) {
  if (window.stacks.length >= 9) {
    return;
  }
  if (window.stacks.indexOf(num) >= 0) {
    return;
  }
  window.stacks.push(num);
  return output();
};

delete_stacks = function() {
  if (window.stacks.length <= 0) {
    return;
  }
  window.stacks.pop();
  return output();
};

clear_stacks = function() {
  window.stacks = [];
  return output();
};

output = function() {
  var i, len, num, ref, tr;
  $('#viewer').html('');
  tr = $('<tr>');
  ref = window.stacks;
  for (i = 0, len = ref.length; i < len; i++) {
    num = ref[i];
    $(tr).append($('<td>').append($('<img>').attr('src', './img/' + num + '.png')));
  }
  $('#viewer').append(tr);
  $('#string').val(stacks_to_str());
  return copy();
};

copy = function() {
  var i, len, num, ref, strs;
  strs = [];
  ref = window.stacks;
  for (i = 0, len = ref.length; i < len; i++) {
    num = ref[i];
    strs.push(num_to_str(num));
  }
  return navigator.clipboard.writeText(stacks_to_str());
};

stacks_to_str = function() {
  var i, len, num, ref, strs;
  strs = [];
  ref = window.stacks;
  for (i = 0, len = ref.length; i < len; i++) {
    num = ref[i];
    strs.push(num_to_str(num));
  }
  return strs.join("\t");
};

init_cards = function() {
  var i, j, num, pow, results, str, suit, tr;
  results = [];
  for (suit = i = 0; i < 4; suit = ++i) {
    tr = $('<tr>');
    for (pow = j = 12; j >= 0; pow = --j) {
      num = suit * 13 + pow + 1;
      str = num_to_str(num);
      tr.append($('<td>').append($('<img>').attr('src', './img/' + num + '.png').attr('string', str).attr('num', num).on('click', function() {
        return add_stacks(Number($(this).attr('num')));
      })));
    }
    results.push($('#trumps').append(tr));
  }
  return results;
};

num_to_str = function(num) {
  var pow, str_power, str_suit, suit;
  num = num - 1;
  suit = Math.floor(num / 13);
  pow = num % 13;
  str_suit = (function() {
    switch (suit) {
      case 0:
        return 's';
      case 1:
        return 'd';
      case 2:
        return 'h';
      case 3:
        return 'c';
    }
  })();
  str_power = pow <= 7 ? '' + (pow + 2) : pow === 8 ? 'T' : pow === 9 ? 'J' : pow === 10 ? 'Q' : pow === 11 ? 'K' : pow === 12 ? 'A' : void 0;
  return str_power + str_suit;
};
